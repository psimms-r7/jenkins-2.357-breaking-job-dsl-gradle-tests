import org.yaml.snakeyaml.Yaml

buildscript{
    repositories{
        mavenCentral()
    }
    dependencies{
        classpath("org.yaml:snakeyaml:1.30")
    }
}

plugins {
  id 'groovy'
}

sourceSets {
  main {
    groovy {
      srcDirs = ["${workingDir}/src", "${workingDir}/jobs", "${workingDir}/vars"]
    }
  }
  test {
    groovy {
      srcDirs = ["${workingDir}/test"]
    }
  }
}

allprojects {
  apply plugin: 'groovy'
  repositories {
    mavenCentral()
    maven { url 'https://repo.jenkins-ci.org/public/' }
    maven { url 'https://repo.jenkins-ci.org/releases/' }
  }
}

configurations {
  testPlugins {}
}

// Exclude buggy Xalan dependency this way the JRE default TransformerFactory is used
// The xalan pulled in by htmlunit does not properly deal with spaces folder / job names
configurations.all*.exclude group: 'xalan'

dependencies {
  implementation 'org.codehaus.groovy:groovy-all:2.5.17' // Tied to spock
  implementation 'com.cloudbees:groovy-cps:1.32'
  implementation("org.jenkins-ci.plugins:job-dsl-core:${jobDslVersion}") {
    exclude module:'xstream'
  }

  implementation "org.jenkins-ci.main:jenkins-core:${jenkinsVersion}"
  testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5' // Need to migrate to spock 2.0
  testImplementation 'cglib:cglib-nodep:3.3.+' // used by Spock

  // Jenkins test harness dependencies
  testImplementation('org.jenkins-ci.main:jenkins-test-harness:1816.v8138d8056949') {
    exclude group: 'org.netbeans.modules', module: 'org-netbeans-insane' // https://github.com/sheehan/job-dsl-gradle-example/issues/90
  }

  testImplementation("org.jenkins-ci.main:jenkins-war:${jenkinsVersion}") {
    exclude group: 'org.jenkins-ci.ui', module: 'bootstrap' // https://github.com/sheehan/job-dsl-gradle-example/issues/87
  }

  // Job DSL plugin including plugin dependencies
  testImplementation "org.jenkins-ci.plugins:job-dsl:${jobDslVersion}"
  testImplementation "org.jenkins-ci.plugins:job-dsl:${jobDslVersion}@jar"
  testImplementation 'org.jenkins-ci.plugins:structs:1.24@jar'
  testImplementation 'org.jenkins-ci.plugins:cloudbees-folder:6.729.v2b_9d1a_74d673@jar'
  testImplementation "org.jenkins-ci.plugins:config-file-provider:3.10.0@jar"

  def Yaml yaml = new Yaml()

  def preReqsFile = "${workingDir}/preReqs.yaml"
  def testFile = new File(preReqsFile)
  if (testFile.exists()) {
    def preReqs = yaml.load((preReqsFile as File).text)

    if(preReqs.implementation) { 
      for ( i in preReqs.implementation ) {
          implementation i
      }
    }

    if(preReqs.testImplementation) { 
        for ( ti in preReqs.testImplementation ) {
            testImplementation ti
        }
    }

    if(preReqs.testPlugins) { 
        for ( tp in preReqs.testPlugins ) {
            testPlugins tp
        }
    }
  }
}

task resolveTestPlugins(type: Copy) {
  from configurations.testPlugins
  into new File(sourceSets.test.output.resourcesDir, 'test-dependencies')
  include '*.hpi'
  include '*.jpi'
  def mapping = [:]

  doFirst {
    configurations.testPlugins.resolvedConfiguration.resolvedArtifacts.each {
      mapping[it.file.name] = "${it.name}.${it.extension}"
    }
  }
  rename { mapping[it] }

  doLast {
    List<String> baseNames = source*.name.collect { mapping[it] }.collect { it[0..it.lastIndexOf('.') - 1] }
    new File(destinationDir, 'index').setText(baseNames.join('\n'), 'UTF-8')
  }
}

test {
  dependsOn tasks.resolveTestPlugins
  inputs.files sourceSets.main.groovy.srcDirs

  exclude '**/XmlOutput.class'

  workingDir = new File(project.workingDir)
}
